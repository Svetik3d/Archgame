# -*-coding: utf-8 -*-
from archgame import constants

ASK_QUANTITY = "Сколько будет игроков? "
ASK_CLASSES = """\
Классы игроков:
М - Менеджер, невероятно обаятелен. Каждый ход к нему просто так приходит 1
    пользователь (во время фазы 3).
Р - Программист, властелин API. Его API выдерживают больше остальных - целых
    5 пользователей каждая.
А - Админ, неустрашим. В его кармане всегда есть флешка с продом, Backup
    встроенный, DB не падает ни при каких обстоятельствах."""
ASK_NAME = "Введите имя и класс игрока %d(через '{0}') ".format(
    constants.SEPARATOR)

CLASSES_USER_READABLE = {
    constants.MANAGER_CLASS: 'Менеджер',
    constants.PROGRAMMER_CLASS: 'Программист',
    constants.ADMIN_CLASS: 'Админ',
}

LEGEND = """\
A - API: выдерживает до {0} пользователей
D - DB: обрабатывает запросы от API, поддерживает до {1}х API.
L - LoadBalancer: Позволяет масштабировать API. Обслуживает нe больше {2}х API.
    Без балансировщика при нескольких API только один принимает нагрузку.
B - Backup: В случае ошибки позволяет не потерять пользователей, но снимается
    с игрового поля.

Users - количество пользователей в системе
Сap (capacity) - максимальное количество пользователей, которое сможет
    выдержать ваша система.
""".format(constants.LIM_A, constants.LIM_D, constants.LIM_L)

SPRINTS = "Спринт %d:"

INPUT_ACTION = "Введите действие для игрока %s: "

DESC = """
Вам пришло финансирование, у каждого игрока есть %i очка, которые он может
потратить либо на привлечение новых пользователей(u), либо на установку новых
сервисов(s):
"""

ENDING = "Поздравляем победителя %s!!!"

INVALID_USER_INPUT = ('Некорректный ввод, пожалуйста, попробуйте снова, '
                      'помните, что на ход вам даётся %d очка. Формат ввода '
                      'смотрите в правилах игры.')

EVENT_FAILED = ("Событие сломалось, для этого игрока ничего не происходит"
                ", играем дальше.")

# Texts for telegram mode

# Пришлось написать длинные строки в одну линию, т к у Telegram свое
# представление о форматировании и длине строки
TELEGRAM_HELP = """Привет! Присоединяйтесь к игре и попробуйте свои силы в проектировании системы, которая выдержит максимальное количество пользователей. Наберите клиентов больше, чем у конкурента! Желаем удачи!

<b>Доступные команды:</b>
/rules <b>Посмотреть правила игры.</b>
/start <b>Вывести это сообщение.</b>
/trial [&lt;Имя&gt;] [&lt;Класс&gt;=(A|M|P)] <b>Попробовать игру.</b>
    Игра начнется для игрока, которого зовут &lt;Имя&gt; и его класс в игре будет &lt;Класс&gt;. Если &lt;Имя&gt; или &lt;Клаcc&gt; не указаны при вызове команды, то будет выбрано значение по умолчанию.  Вместе с ним в игру будут играть два бота, которые будут названы Bot1 и Bot2. Они будут представлять оставшиеся классы.
/new [&lt;Имя&gt;] [&lt;Класс&gt;=(A|M|P)] <b>Создать новую игру.</b>
    Игра будет ждать начала через команду /run. После выполнения этой команды будет сгенерирован код, который надо переслать другим игрокам. Имя в этой игре у данного игрока будет &lt;Имя&gt;, а класс соответственно &lt;Класс&gt;. Если &lt;Имя&gt; или &lt;Клаcc&gt; не указаны, то будут выбраны значения по умолчанию.
/run <b>Запустить ранее созданную игру.</b>
    Команда будет выполнена только если игра была создана перед этим командой /new
/join [&lt;Имя&gt;] [&lt;Класс&gt;=(A|M|P)] <b>Подключиться к созданной игре.</b>
    После подключения будут запрошен сначала код игры, который можно получить от того, кто создавал игру командой /new.  После этого будут запрошены имя и класс для данной игры
/reset <b>Завершить текущую игру.</b>
    В случае игры с другими людьми она будет завершена, если вы являлись создателем или ваш игрок будет в дальнейшем управляться ботом в противном случае.
/status <b>Посмотреть текущее состояние.</b>
    Покажет какое текущее состояние для данного игрока.
/help <b>Вывести это сообщение.</b>

Если у вас есть вопросы - приходите в <a href="https://t.me/archgame_chat">чат по обсуждению данной игры</a>
"""  # noqa: E501
TELEGRAM_GAME_ALREADY_STARTED = ("Игра для вас уже начата. Если вы хотите "
                                 "начать новую игру, то нужно предварительно "
                                 "завершить текущую через команду /reset")
TELEGRAM_GAME_NOT_STARTED = ("Нету ни одной ожидающей старта игры. Создайте"
                             "новую игру через команду /new, чтобы"
                             "воспользоваться этой командой")
TELEGRAM_START_FORBIDEN = ("Нельзя запустить чужую игру. Это должен сделать "
                           "создатель игры.")
TELEGRAM_USER_INFO = 'Вы участвуете в игре под именем "%s" и c классом %s'
TELEGRAM_JOIN_INFO = ("Вы начали процесс подключения к игре. Следующим шагом "
                      "нужно ввести правильный идентификатор игры. Попросите "
                      "создателя игры переслать его вам, после этого "
                      "перешлите его боту. Остановить процесс подключения "
                      "можно командой /reset")
TELEGRAM_JOIN_GAME_FAIL = "Игра с индентификатором %s не найдена."
TELEGRAM_JOIN_GAME_RESET = "Вы остановили процесс подключения к игре."

TELEGRAM_GAME_STARTED_STATUS = "Вы сейчас играете в игру %s"
TELEGRAM_GAME_CREATED = ("Игра создана. Перешлите ее номер другим игрокам. "
                         "После того как они вступят в нее через команду "
                         "/join вы сможете начать с помощью команды /run. "
                         "Через команду /status можно контролировать сколько "
                         "человек присоединилось.")
TELEGRAM_GAME_IDLE_STATUS = "Вы сейчас не играете ни в одну игру"
TELEGRAM_GAME_RESET_SUCCESS = "Игра %s завершена."
TELEGRAM_GAME_NOT_OWNER = ("Вы не можете сбросить игру %s, поскольку не "
                           "являтесь ее владельцем")
TELEGRAM_STATUS_PLAYERS_INTRO = "В эту игру играют:"
TELEGRAM_STATUS_PLAYER_INFO = "Игрок %s с классом %s находится в статусе: %s"
TELEGRAM_USER_STATUS_HUMAN_READABLE = {
    constants.USER_INIT_ST: "Ожидает начала игры",
    constants.USER_WAIT_ST: "Вводит данные",
    constants.USER_READY_ST: "Ждет пока сходят остальные",
    constants.USER_JOIN_ST: "Подключается к игре",
}
# Пришлось написать длинные строки в одну линию, т к у Telegram свое
# представление о форматировании и длине строки
TELEGRAM_RULES = """
Вам выдали несколько стоек серверов.

<b>Задача:</b> постройте систему, которая выдержит высокую нагрузку и позволит получить максимально возможное количество пользователей. На это у вас есть 7 спринтов. Победит набравший наибольшее количество пользователей.


<b>Игровое поле:</b>
<b>Игровое поле</b> — квадратная доска 4х4 клетки.
<b>Каждая клетка</b> — один сервер, на котором можно разместить только один сервис (любой).
<b>Каждая колонка</b> - стойка (группы серверов с общим питанием и сетью).
<b>Нумерация ячеек</b> - сквозная. Слева направо. Сверху вниз.
<code>| 1| 2| 3| 4|
| 5| 6| 7| 8|
| 9|10|11|12|
|13|14|15|16|</code>
Сервера могут выходить из строя! Все как в жизни!

<b>Составные части системы:</b>
<b>A - API:</b> выдерживает до 3 пользователей
<b>D - DB:</b> обрабатывает запросы от API, поддерживает до 3х API.
<b>L - LoadBalancer:</b> Позволяет масштабировать API. Обслуживает нe больше 3х API. Без балансировщика при нескольких API только один принимает нагрузку.
<b>B - Backup:</b> В случае ошибки позволяет не потерять пользователей, но снимается с игрового поля.

<b>Users</b> - количество пользователей в системе
<b>Сap (capacity)</b> - максимальное количество пользователей, которое сможет выдержать ваша система.
Например: система из 3х API, одного LB и одной DB выдерживает 9 Users. Если во время событий к вам придет больше 9 пользователей, вы не сможете их принять. Если вы хотите, чтобы ваша система выдерживала большую нагрузку - добавляйте сервисы.

<b>Каждый спринт состоит из нескольких фаз:</b>
<b>Фаза 1:</b> Принятие решений. У вас есть несколько очков ресурсов, которые можно потратить:
▶ на расширение системы (1 сервис - 1 очко)
▶ на привлечение клиентов (1 User - 1 очко)
Расширение системы происходит через добавление сервисов (A, D, L, B). В первый спринт вам доступно 4 очка, в последующие - по 2 очка.
<b>Фаза 2.</b> Срабатывание событий – положительных или отрицательных.  Они могут влиять и на вашу систему и на нагрузку от пользователей.
<b>Фаза 3.</b> Актуализация состояния вашей системы.  Подводим итоги, считаем количество пользователей.

<b>Определение победителя:</b>
Выигрывает тот, у кого больше всего пользователей после 7-го спринта!

<b>Классы игроков:</b>
Можно выбрать один из классов игроков в начале игры. Каждый обладает своими преимуществами:
<b>М - Менеджер,</b> невероятно обаятелен. Каждый ход к нему просто так приходит 1 пользователь (во время фазы 3).
<b>Р - Программист,</b> властелин API. Его API выдерживают больше остальных - целых 5 пользователей каждая.

<b>Формат ввода для Фазы 1:</b>
Во время принятия решения у вас есть несколько очков. Очки можно потратить:
▶ <b>на привлечение пользователя</b> - введите u
▶ <b>на установку сервиса</b> - введите s-Название_сервиса-номер_клетки.

Стоимость каждого действия - одно игровое очко.
Ввод решений нужно разделять пробелом.

Пример ввода: "u s-a-3" - потратить одно очко на привлечение новых пользователей, а на второе очко запустить API в сервере номер 3
"""  # noqa: E501
